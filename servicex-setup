#!/usr/bin/env python3

from sqlite3 import connect, Error
from os.path import isfile


def databaseConnect(databaseFile):
    conn = None
    try:
        conn = connect(databaseFile)
        return conn
    except Error as e:
        print(e)

    return conn


def tableCreate(databaseConnection, databaseTable):
    try:
        c = databaseConnection.cursor()
        c.execute(databaseTable)
    except Error as e:
        print(e)


def main():
    if isfile('servicex.db'):
        exit("The database file appears to already exist, you may run 'servicex'.")
    else:
        databaseConnection = databaseConnect("servicex.db")
        databaseCursor = databaseConnection.cursor()

    networksTable = """CREATE TABLE IF NOT EXISTS ircNetworks (
                                    ID integer PRIMARY KEY,
                                    networkName text NOT NULL,
                                    networkAddress text NOT NULL,
                                    networkPort integer NOT NULL,
                                    networkSSL text NOT NULL,
                                    nicknames text NOT NULL,
                                    ident text NOT NULL,
                                    realname text NOT NULL,
                                    nickservUsername text NOT NULL,
                                    nickservPassword text NOT NULL,
                                    operUsername text NOT NULL,
                                    operPassword text NOT NULL,
                                    commandTrigger text NOT NULL
                                );"""

    modulesTable = """CREATE TABLE IF NOT EXISTS modules (
                                    ID integer PRIMARY KEY,
                                    networkID integer NOT NULL,
                                    moduleName text NOT NULL,
                                    moduleEnabled text NOT NULL
                                );"""

    channelsTable = """CREATE TABLE IF NOT EXISTS ircChannels (
                                    ID integer PRIMARY KEY,
                                    networkID integer NOT NULL,
                                    channelName text NOT NULL
                                );"""

    if databaseConnection is not None:
        tableCreate(databaseConnection, networksTable)
        tableCreate(databaseConnection, modulesTable)
        tableCreate(databaseConnection, channelsTable)

        nicknames = str(input("What would you like my nickname(s) to be (Must be a space seperated list, default answer is 'YukiChan YukiChan2 YukiChan3')? ") or "YukiChan YukiChan2 YukiChan3")
        ident = str(input("What would you like my ident to be (Default answer is 'yuki')? ") or "yuki")
        realname = str(input("What would you like my real name to be (Default answer is 'Yuki Chan')? ") or "Yuki Chan")
        networkName = str(input("What is the name of the IRC network you would like me to connect to (Default answer is 'Libera')? ") or "Libera")
        networkAddress = str(input("What is the address of the IRC network you would like me to connect to (Default answer is 'irc.libera.chat')? ") or "irc.libera.chat")
        networkPort = int(input("What is the port of the IRC network you would like me to connect to (Default answer is '6697')? ") or 6697)
        networkSSL = str(input("Do you want me to use SSL when connecting to this IRC network (Valid answers are 'yes' and 'no', default answer is 'yes')? ") or "yes")
        networkModulesList = str(input("Which modules would you like me to have enabled for this IRC network (Must be a space seperated list, default answer is 'utilities, channel fun test')? ") or "utilities channel fun test")
        nickservUsername = str(input("What is my NickServ username (Default answer is 'YukiChan')? ") or "YukiChan")
        nickservPassword = str(input("What is my NickServ password? ") or "blah")
        operUsername = str(input("What is my oper username (Default answer is 'YukiChan')? ") or "YukiChan")
        operPassword = str(input("What is my oper password? ") or "blah")
        channelName = str(input("Which IRC channel should I join (Default answer is '#bots')? ") or "#bots")
        commandTrigger = str(input("Which is my command trigger (Default answer is '!')? ") or "!")

        nicknames = ", ".join(nicknames.split())

        tuple = (
            networkName,
            networkAddress,
            networkPort,
            networkSSL,
            nicknames,
            ident,
            realname,
            nickservUsername,
            nickservPassword,
            operUsername,
            operPassword,
            commandTrigger)

        query = """INSERT INTO ircNetworks (networkName, networkAddress, networkPort, networkSSL, nicknames, ident, realname, nickservUsername, nickservPassword, operUsername, operPassword, commandTrigger) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"""
        databaseCursor.execute(query, tuple)
        databaseConnection.commit()

        fullModulesList = ['utilities', 'channel', 'fun', 'test']

        for moduleName in fullModulesList:
            if moduleName in networkModulesList.split():
                moduleEnabled = 1
            else:
                moduleEnabled = 0

            tuple = (1, moduleName, moduleEnabled)
            query = """INSERT INTO modules (networkID, moduleName, moduleEnabled) VALUES (?, ?, ?)"""
            databaseCursor.execute(query, tuple)
            databaseConnection.commit()

        tuple = (1, channelName)
        query = """INSERT INTO ircChannels (networkID, channelName) VALUES (?, ?)"""
        databaseCursor.execute(query, tuple)
        databaseConnection.commit()
    else:
        print("Cannot create the database connection.")


if __name__ == "__main__":
    main()
